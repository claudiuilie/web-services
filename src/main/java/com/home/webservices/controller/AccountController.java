package com.home.webservices.controller;


import com.home.webservices.entity.Account;
import com.home.webservices.repository.AccountRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;


@Controller
public class AccountController {

    private Logger logger = LoggerFactory.getLogger(AccountController.class);

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AccountRepository userRepository;

    @PostMapping(path="account/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name, @RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Account n = new Account();
        n.setUsername(name);
        n.setPassword(password);
        n.setEmail("test@yahoo.com");
        logger.info("New user: " + n.toString());
        userRepository.save(n);
        return "Saved";
    }

    @CrossOrigin(origins = "http://localhost:3000")
    @GetMapping(path="account/all")
    public @ResponseBody
    Iterable<Account> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }


    @GetMapping(path="/account")
    public @ResponseBody
    Optional<Account> getUserById(@RequestParam Long id) {
        // This returns a JSON or XML with the users
        return userRepository.findById(id);
    }
}
